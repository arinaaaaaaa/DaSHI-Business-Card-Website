{
    "sourceFile": "pages/news/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1649275797574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1649275803931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n                 <div className={styles.searchSection}>\n                     <Dropdown topic = {topic} setTopic = {setTopic}/>\n                     {topic != \"\" ?\n                         <button className={styles.clear} onClick={() => setTopic(\"\")}>\n-                            <img src=\"icons/check.svg\" alt=\"\" />\n+                            <img src=\"/icons/check.svg\" alt=\"\" />\n                             СБРОСИТЬ\n                         </button>\n                     : null }\n                 </div>\n"
                },
                {
                    "date": 1649392526729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n                 {newsArray.length != 0 ?\n                     <div className={styles.newsList}>\n                         {newsArray.map((item, index) =>\n                             <NewsItem\n-                                icon={`${process.env.api_hostname}/${item.background}`}\n+                                icon={`${item.background}`}\n                                 key={index}\n                                 title={item.title}\n                                 newsTopic={item.content}\n                                 shortPart={(item.content).length > 268 ? shortPart(item.content) : null}\n"
                }
            ],
            "date": 1649275797574,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport Header from \"../../components/universal/Header.js\"\nimport Footer from \"../../components/universal/Footer.js\";\nimport styles from \"../../styles/News.module.css\";\nimport Dropdown from '../../components/Dropdown.js';\nimport axios from 'axios';\n\nfunction Banner() {\n    return (\n        <div className={styles.bannerSection}>\n            <div className={styles.news}>\n                <p className={styles.title}><span style={{color: '#F46628'}}>АКТУАЛЬНЫЕ</span> СОБЫТИЯ<br/>И ПРЕДЛОЖЕНИЯ</p>\n                <img src=\"images/news.png\" alt=\"\" />\n            </div>\n            <div className={styles.subTitle}>НОВОСТИ DS</div>\n        </div>\n    )\n}\n\nfunction NewsItem(props) {\n\n    const[fullNew, changeNewsStyle] = useState(false);\n    const [doContinue, setDoContinue] = useState(false);\n    const [doReverse, setDoReverse] = useState(false);\n\n    const arrowRotate = useSpring({\n        cancel: !doContinue,\n        from: {\n            transform: 'rotate(0deg)'\n        },\n        to: {\n            transform: 'rotate(-180deg)'\n        },\n        reverse: doReverse,\n        config: {duration: 150},\n        onStart: () => {\n            changeNewsStyle(!fullNew);\n        },\n        onRest: () => {\n            setDoContinue(false);\n        }\n    });\n\n    function startAnimation() {\n        if (!doContinue) {\n            setDoReverse(fullNew); \n            setDoContinue(true);\n        }\n    }\n\n    return (\n        <span className={styles.newsItem}>\n            <span className={styles.newsImage}>\n                <img src={props.icon} style = {{height: 233 + \"px\", width: 386 + \"px\"}} alt=\"\" />\n                <img className={styles.maskImg} src=\"/images/maskNews.svg\" alt=\"\" />\n            </span>\n            <div className={styles.newsWrapper}>\n                <span className={styles.information}>\n                    <span className={styles.infoTopic}>\n                        <p className={styles.newsTitle}>{props.title}</p>\n                        {   props.shortPart && !fullNew ? \n                                <p className={styles.shortPart}>{props.shortPart}</p> :\n                            props.shortPart && fullNew ? \n                                <p className={styles.newsTopic}>{props.newsTopic}</p> :\n                            !props.shortPart ?\n                            <p className={styles.newsTopic}>{props.newsTopic}</p> : null\n                        }\n                    </span>\n                    {props.shortPart ? \n                        <button className={styles.showMore} onClick={() => startAnimation()}>\n                            {!fullNew ? \"Читать полностью\" : \"Скрыть новость\"}\n                            <animated.img src=\"/icons/showAnswer.svg\" alt=\"\" style={arrowRotate}/>\n                        </button>\n                    : null }\n                </span>\n            </div>\n        </span>\n    )\n}\n\nfunction NewsList() {\n    const [topic, setTopic] = useState(\"\");\n    const [newsList, setNewsList] = useState(null);\n    const [newsCount, setNewsCount] = useState(false);\n\n    function getNewsList() {\n        axios(`${process.env.api_hostname}/news/list/`, { withCredentials: true })\n        .then((response) => { \n            setNewsList(response.data)\n        })\n    }\n\n    useEffect(() => {getNewsList()}, [])\n\n    function shortPart(fullText) {\n        return fullText.slice(0,265) + \"...\"\n    }\n\n    if (newsList != null) {\n        let newsArray = []\n        if (topic == \"\") {\n            if (newsCount == true) newsArray = newsList\n            if (newsCount == false) newsArray = newsList.slice(0,3)\n        }\n        else if (topic != \"\") {\n            if (newsCount == true) newsArray = newsList.filter(item => item.topics.includes(topic.id))\n            if (newsCount == false) newsArray = newsList.filter(item => item.topics.includes(topic.id)).slice(0,3)\n        }\n\n        return (\n            <div className={styles.newsSection}>\n                <div className={styles.searchSection}>\n                    <Dropdown topic = {topic} setTopic = {setTopic}/>\n                    {topic != \"\" ?\n                        <button className={styles.clear} onClick={() => setTopic(\"\")}>\n                            <img src=\"icons/check.svg\" alt=\"\" />\n                            СБРОСИТЬ\n                        </button>\n                    : null }\n                </div>\n                {newsArray.length != 0 ?\n                    <div className={styles.newsList}>\n                        {newsArray.map((item, index) =>\n                            <NewsItem\n                                icon={`${process.env.api_hostname}/${item.background}`}\n                                key={index}\n                                title={item.title}\n                                newsTopic={item.content}\n                                shortPart={(item.content).length > 268 ? shortPart(item.content) : null}\n                            />\n                        )}\n                    </div>\n                    : <p className={styles.noNews}>НОВОСТИ БУДУТ ЧУТЬ ПОЗЖЕ</p>\n                }\n                {(topic == \"\" && newsList.length > 3) || (topic != \"\" && newsList.filter(item => item.topics.includes(topic.id)).lenght > 3) ? \n                    <button className={styles.showAllNews} onClick={() => setNewsCount(!newsCount)}>\n                        {!newsCount ? \"Смотреть все\" : \"Скрыть новости\"}\n                    </button>\n                : null}\n            </div>\n        )\n    }\n    return null\n}\n\nfunction News() {\n\n    return (\n        <>\n            <Header/>\n            <Banner/>\n            <div className={styles.wrapper}>\n                <NewsList/>\n            </div>\n            <Footer/>\n        </>\n    )\n}\n\nexport default News;"
        }
    ]
}